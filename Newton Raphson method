import math

def func(x):
    return math.cos(x) - x * math.exp(x)

def derivative(x):
    return -math.sin(x) - (x * math.exp(x) + math.exp(x))

print("Program for Newton-Raphson Method")
x0 = float(input("Enter the initial guess x0: "))
n = int(input("Enter the number of iterations: "))

for i in range(1, n + 1):
    fx = func(x0)
    fdx = derivative(x0)
    
    if fdx == 0:
        print(f"Iteration {i}: Derivative is zero. Cannot proceed further.")
        break
    
    x1 = x0 - (fx / fdx)
    print(f"Iteration {i}: x0 = {x0:.6f}, f(x0) = {fx:.6f}, f'(x0) = {fdx:.6f}, x1 = {x1:.6f}")
    
    x0 = x1

print(f"The root after {n} iterations is approximately: {x0:.6f}")
print("End")
